<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0216.1925                               -->
<workbook source-build='10.2.0 (10200.17.0216.1925)' source-platform='win' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='incidents_per_year (incidents_per_year)' inline='true' name='federated.05y7qjt1llubn710p6kir1oi12pn' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='incidents_per_year' name='excel-direct.020fcr21cbzz191evcs1a1qp99mi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Study/Big Data Analytics/Project/New folder/incidents_per_year.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.020fcr21cbzz191evcs1a1qp99mi' name='incidents_per_year' table='[incidents_per_year$]' type='table'>
          <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='count_incidents' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[incidents_per_year]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count_incidents</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count_incidents]</local-name>
            <parent-name>[incidents_per_year]</parent-name>
            <remote-alias>count_incidents</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[incidents_per_year]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Count Incidents' datatype='integer' name='[count_incidents]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.484026' measure-ordering='alphabetic' measure-percentage='0.515974' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:year:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2014</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2017</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2016</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2015</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='div_incidents_per_year' inline='true' name='federated.06m2zkj05xmyy71a69rr01jzw25c' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='div_incidents_per_year' name='textscan.1neifpn0gm0bfn1c5j04q1rgx1c1'>
            <connection class='textscan' directory='E:/Study/Big Data Analytics/Project/Project files' filename='div_incidents_per_year.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1neifpn0gm0bfn1c5j04q1rgx1c1' name='div_incidents_per_year.csv' table='[div_incidents_per_year#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='string' name='division' ordinal='1' />
            <column datatype='integer' name='count_incidents' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[div_incidents_per_year.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>division</remote-name>
            <remote-type>129</remote-type>
            <local-name>[division]</local-name>
            <parent-name>[div_incidents_per_year.csv]</parent-name>
            <remote-alias>division</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count_incidents</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count_incidents]</local-name>
            <parent-name>[div_incidents_per_year.csv]</parent-name>
            <remote-alias>count_incidents</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[div_incidents_per_year.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Count Incidents' datatype='integer' name='[count_incidents]' role='measure' type='quantitative' />
      <column caption='Division' datatype='string' name='[division]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[division]' derivation='None' name='[none:division:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:division:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NorthWest&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;NorthEast&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SouthEast&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Central&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South Central&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;N/A&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;SouthWest&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:division:nk]' palette=':filled' type='shape'>
            <map to=':filled/asterisk'>
              <bucket>&quot;South Central&quot;</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to=':filled/diamond'>
              <bucket>&quot;SouthEast&quot;</bucket>
            </map>
            <map to=':filled/down-triangle'>
              <bucket>&quot;N/A&quot;</bucket>
            </map>
            <map to=':filled/plus'>
              <bucket>&quot;NorthEast&quot;</bucket>
            </map>
            <map to=':filled/square'>
              <bucket>&quot;North Central&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;NorthWest&quot;</bucket>
            </map>
            <map to=':filled/triangle'>
              <bucket>&quot;SouthWest&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='race_genderF' inline='true' name='federated.09t3jpm05n517e111y1l21az0uhz' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='race_genderF' name='textscan.1j4ixjn09ukjl71f5qf820uyzfod'>
            <connection class='textscan' directory='E:/Study/Big Data Analytics/Project/Project files/Data Files' filename='race_genderF.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1j4ixjn09ukjl71f5qf820uyzfod' name='race_genderF.csv' table='[race_genderF#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='string' name='complainant_race' ordinal='1' />
            <column datatype='string' name='complainant_gender' ordinal='2' />
            <column datatype='integer' name='count_incidents' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[race_genderF.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>complainant_race</remote-name>
            <remote-type>129</remote-type>
            <local-name>[complainant_race]</local-name>
            <parent-name>[race_genderF.csv]</parent-name>
            <remote-alias>complainant_race</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>complainant_gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[complainant_gender]</local-name>
            <parent-name>[race_genderF.csv]</parent-name>
            <remote-alias>complainant_gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count_incidents</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count_incidents]</local-name>
            <parent-name>[race_genderF.csv]</parent-name>
            <remote-alias>count_incidents</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[race_genderF.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Complainant Gender' datatype='string' name='[complainant_gender]' role='dimension' type='nominal' />
      <column caption='Complainant Race' datatype='string' name='[complainant_race]' role='dimension' type='nominal' />
      <column caption='Count Incidents' datatype='integer' name='[count_incidents]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[complainant_race]' derivation='None' name='[none:complainant_race:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.517572' measure-ordering='alphabetic' measure-percentage='0.482428' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:complainant_race:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;A&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;L&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;U&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;N&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;TEST&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;B&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;W&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;I&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:complainant_race:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;L&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;TEST&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;I&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;U&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;N&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='UCR_offense_incidents' inline='true' name='federated.0w4zkjd0gnc24h15ueur70e97nwc' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='UCR_offense_incidents' name='textscan.1d9rve8083k1mp18neco30o1ls40'>
            <connection class='textscan' directory='E:/Study/Big Data Analytics/Project/Project files/Data Files' filename='UCR_offense_incidents.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1d9rve8083k1mp18neco30o1ls40' name='UCR_offense_incidents.csv' table='[UCR_offense_incidents#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='string' name='ucr_offense_description' ordinal='0' />
            <column datatype='integer' name='count_incidents' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>ucr_offense_description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ucr_offense_description]</local-name>
            <parent-name>[UCR_offense_incidents.csv]</parent-name>
            <remote-alias>ucr_offense_description</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count_incidents</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count_incidents]</local-name>
            <parent-name>[UCR_offense_incidents.csv]</parent-name>
            <remote-alias>count_incidents</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[UCR_offense_incidents.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Count Incidents' datatype='integer' name='[count_incidents]' role='measure' type='quantitative' />
      <column caption='Ucr Offense Description' datatype='string' name='[ucr_offense_description]' role='dimension' type='nominal' />
      <column-instance column='[ucr_offense_description]' derivation='None' name='[none:ucr_offense_description:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.482428' measure-ordering='alphabetic' measure-percentage='0.517572' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:ucr_offense_description:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;LIQUOR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OTHER OFFENSES&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ANIMAL BITE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;THEFT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MOTOR VEHICLE ACCIDENT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TRAFFIC FATALITY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AIRPLANE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DISORDERLY CONDUCT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AGGRAVATED ASSAULT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;INTOXICATION MANSLAUGHTER&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AUTO THEFT - UUMV&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CHILD (OFFENSES AGAINST)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;EMBEZZLEMENT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ARSON&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BURGLARY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HOME ACCIDENT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MURDER&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ROBBERY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SUDDEN DEATH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FRAUD&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DWI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NARCOTICS/DRUGS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ACCIDENTAL INJURY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GAMBLING&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ASSAULT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OCCUPATIONAL ACCIDENT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CRIMINAL MISCHIEF/VANDALISM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WEAPONS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FORGERY &amp; COUNTERFEIT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;&apos;FRAUD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LOST PROPERTY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FIREARMS ACCIDENT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FOUND PROPERTY&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='zip_incidents' inline='true' name='federated.128gv9r0av0j241dund721uuzxi4' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='zip_incidents' name='textscan.0oe4evb1unu83n0zq8dic046pox0'>
            <connection class='textscan' directory='E:/Study/Big Data Analytics/Project/Project files/Data Files' filename='zip_incidents.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0oe4evb1unu83n0zq8dic046pox0' name='zip_incidents.csv' table='[zip_incidents#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='integer' name='zip_code' ordinal='0' />
            <column datatype='integer' name='count_incidents' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>zip_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zip_code]</local-name>
            <parent-name>[zip_incidents.csv]</parent-name>
            <remote-alias>zip_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count_incidents</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count_incidents]</local-name>
            <parent-name>[zip_incidents.csv]</parent-name>
            <remote-alias>count_incidents</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[zip_incidents.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='High Incidents Flag' datatype='integer' name='[Calculation_1113796545718353921]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='if SUM([count_incidents]) &gt; 3000 THEN 1 ELSE 0 END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Count Incidents' datatype='integer' name='[count_incidents]' role='measure' type='quantitative' />
      <column caption='Zip Code' datatype='integer' default-format='*00000' name='[zip_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[Calculation_1113796545718353921]' derivation='User' name='[usr:Calculation_1113796545718353921:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.450479' measure-ordering='alphabetic' measure-percentage='0.549521' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_1113796545718353921:ok]' type='palette'>
            <map to='#ee7422'>
              <bucket>1</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>0</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='beat_incidents_per_year' inline='true' name='federated.1iqg4er0l5uh8b11pl8940nn8gfo' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='beat_incidents_per_year' name='textscan.0cnbxfj18vj50a1f29jec144fwiw'>
            <connection class='textscan' directory='E:/Study/Big Data Analytics/Project/Project files/Data Files' filename='beat_incidents_per_year.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0cnbxfj18vj50a1f29jec144fwiw' name='beat_incidents_per_year.csv' table='[beat_incidents_per_year#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='beat' ordinal='1' />
            <column datatype='integer' name='count_incidents' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[beat_incidents_per_year.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>beat</remote-name>
            <remote-type>20</remote-type>
            <local-name>[beat]</local-name>
            <parent-name>[beat_incidents_per_year.csv]</parent-name>
            <remote-alias>beat</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count_incidents</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count_incidents]</local-name>
            <parent-name>[beat_incidents_per_year.csv]</parent-name>
            <remote-alias>count_incidents</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[beat_incidents_per_year.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Beat' datatype='integer' name='[beat]' role='measure' type='ordinal' />
      <column caption='Count Incidents' datatype='integer' name='[count_incidents]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.466454' measure-ordering='alphabetic' measure-percentage='0.533546' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:year:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2014</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2017</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2016</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2015</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='race_genderM' inline='true' name='federated.0qj1zth1a0jdxo19863n1161cjpx' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='race_genderM' name='textscan.167m8k714d0nuf16f1m4s0ziiu83'>
            <connection class='textscan' directory='E:/Study/Big Data Analytics/Project/Project files/Data Files' filename='race_genderM.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.167m8k714d0nuf16f1m4s0ziiu83' name='race_genderM.csv' table='[race_genderM#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='string' name='complainant_race' ordinal='1' />
            <column datatype='string' name='complainant_gender' ordinal='2' />
            <column datatype='integer' name='count_incidents' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[race_genderM.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>complainant_race</remote-name>
            <remote-type>129</remote-type>
            <local-name>[complainant_race]</local-name>
            <parent-name>[race_genderM.csv]</parent-name>
            <remote-alias>complainant_race</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>complainant_gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[complainant_gender]</local-name>
            <parent-name>[race_genderM.csv]</parent-name>
            <remote-alias>complainant_gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count_incidents</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count_incidents]</local-name>
            <parent-name>[race_genderM.csv]</parent-name>
            <remote-alias>count_incidents</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[race_genderM.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Complainant Gender' datatype='string' name='[complainant_gender]' role='dimension' type='nominal' />
      <column caption='Complainant Race' datatype='string' name='[complainant_race]' role='dimension' type='nominal' />
      <column caption='Count Incidents' datatype='integer' name='[count_incidents]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.51865' measure-ordering='alphabetic' measure-percentage='0.48135' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='AGG(High Incidents Flag)' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Incidents by Race For Female Complainant'>
      <table>
        <view>
          <datasources>
            <datasource caption='race_genderF' name='federated.09t3jpm05n517e111y1l21az0uhz' />
          </datasources>
          <datasource-dependencies datasource='federated.09t3jpm05n517e111y1l21az0uhz'>
            <column caption='Complainant Gender' datatype='string' name='[complainant_gender]' role='dimension' type='nominal' />
            <column caption='Complainant Race' datatype='string' name='[complainant_race]' role='dimension' type='nominal' />
            <column caption='Count Incidents' datatype='integer' name='[count_incidents]' role='measure' type='quantitative' />
            <column-instance column='[complainant_gender]' derivation='None' name='[none:complainant_gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[complainant_race]' derivation='None' name='[none:complainant_race:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[count_incidents]' derivation='Sum' name='[sum:count_incidents:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_gender:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:complainant_gender:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:complainant_gender:nk]' member='&quot;N/A&quot;' />
                <groupfilter function='member' level='[none:complainant_gender:nk]' member='&quot;TEST&quot;' />
                <groupfilter function='member' level='[none:complainant_gender:nk]' member='&quot;U&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:complainant_race:nk]' />
              <groupfilter function='member' level='[none:complainant_race:nk]' member='&quot;TEST&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]' direction='DESC' using='[federated.09t3jpm05n517e111y1l21az0uhz].[sum:count_incidents:qk]'>
            <groupfilter function='member' level='[none:year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <groupfilter function='member' level='[none:complainant_gender:nk]' member='&quot;M&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#fefaf1' />
            <format attr='fill-below' id='refline0' value='#f2f6f7' />
            <format attr='stroke-color' id='refline0' value='#e15759' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]' />
              <text column='[federated.09t3jpm05n517e111y1l21az0uhz].[sum:count_incidents:qk]' />
              <text column='[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]' />
            </encodings>
            <reference-line axis-column='[federated.09t3jpm05n517e111y1l21az0uhz].[sum:count_incidents:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.09t3jpm05n517e111y1l21az0uhz].[sum:count_incidents:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09t3jpm05n517e111y1l21az0uhz].[sum:count_incidents:qk]</rows>
        <cols>([federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_gender:nk] / ([federated.09t3jpm05n517e111y1l21az0uhz].[none:year:ok] / [federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Incidents by Race For male Complainant'>
      <table>
        <view>
          <datasources>
            <datasource caption='race_genderF' name='federated.09t3jpm05n517e111y1l21az0uhz' />
          </datasources>
          <datasource-dependencies datasource='federated.09t3jpm05n517e111y1l21az0uhz'>
            <column caption='Complainant Gender' datatype='string' name='[complainant_gender]' role='dimension' type='nominal' />
            <column caption='Complainant Race' datatype='string' name='[complainant_race]' role='dimension' type='nominal' />
            <column caption='Count Incidents' datatype='integer' name='[count_incidents]' role='measure' type='quantitative' />
            <column-instance column='[complainant_gender]' derivation='None' name='[none:complainant_gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[complainant_race]' derivation='None' name='[none:complainant_race:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[count_incidents]' derivation='Sum' name='[sum:count_incidents:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#fefaf1' />
            <format attr='fill-below' id='refline0' value='#f2f6f7' />
            <format attr='stroke-color' id='refline0' value='#e15759' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]' />
              <text column='[federated.09t3jpm05n517e111y1l21az0uhz].[sum:count_incidents:qk]' />
            </encodings>
            <reference-line axis-column='[federated.09t3jpm05n517e111y1l21az0uhz].[sum:count_incidents:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.09t3jpm05n517e111y1l21az0uhz].[sum:count_incidents:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/square' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09t3jpm05n517e111y1l21az0uhz].[sum:count_incidents:qk]</rows>
        <cols>([federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_gender:nk] / ([federated.09t3jpm05n517e111y1l21az0uhz].[none:year:ok] / [federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Incidents by UCR offense description'>
      <table>
        <view>
          <datasources>
            <datasource caption='UCR_offense_incidents' name='federated.0w4zkjd0gnc24h15ueur70e97nwc' />
          </datasources>
          <datasource-dependencies datasource='federated.0w4zkjd0gnc24h15ueur70e97nwc'>
            <column caption='Count Incidents' datatype='integer' name='[count_incidents]' role='measure' type='quantitative' />
            <column-instance column='[ucr_offense_description]' derivation='None' name='[none:ucr_offense_description:nk]' pivot='key' type='nominal' />
            <column-instance column='[count_incidents]' derivation='Sum' name='[sum:count_incidents:qk]' pivot='key' type='quantitative' />
            <column caption='Ucr Offense Description' datatype='string' name='[ucr_offense_description]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0w4zkjd0gnc24h15ueur70e97nwc].[none:ucr_offense_description:nk]' direction='DESC' using='[federated.0w4zkjd0gnc24h15ueur70e97nwc].[sum:count_incidents:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0w4zkjd0gnc24h15ueur70e97nwc].[sum:count_incidents:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0w4zkjd0gnc24h15ueur70e97nwc].[sum:count_incidents:qk]' />
              <color column='[federated.0w4zkjd0gnc24h15ueur70e97nwc].[sum:count_incidents:qk]' />
              <text column='[federated.0w4zkjd0gnc24h15ueur70e97nwc].[none:ucr_offense_description:nk]' />
              <text column='[federated.0w4zkjd0gnc24h15ueur70e97nwc].[sum:count_incidents:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='12'>&lt;</run>
                <run bold='true' fontsize='12'>[federated.0w4zkjd0gnc24h15ueur70e97nwc].[none:ucr_offense_description:nk]</run>
                <run bold='true' fontsize='12'>&gt;</run>
                <run bold='true' fontsize='12'>Æ&#10;</run>
                <run bold='true' fontsize='12'>&lt;</run>
                <run bold='true' fontsize='12'>[federated.0w4zkjd0gnc24h15ueur70e97nwc].[sum:count_incidents:qk]</run>
                <run bold='true' fontsize='12'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Incidents by Zipcode'>
      <table>
        <view>
          <datasources>
            <datasource caption='zip_incidents' name='federated.128gv9r0av0j241dund721uuzxi4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.128gv9r0av0j241dund721uuzxi4'>
            <column caption='High Incidents Flag' datatype='integer' name='[Calculation_1113796545718353921]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='if SUM([count_incidents]) &gt; 3000 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Count Incidents' datatype='integer' name='[count_incidents]' role='measure' type='quantitative' />
            <column-instance column='[zip_code]' derivation='None' name='[none:zip_code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[count_incidents]' derivation='Sum' name='[sum:count_incidents:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113796545718353921]' derivation='User' name='[usr:Calculation_1113796545718353921:ok]' pivot='key' type='ordinal' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[zip_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.128gv9r0av0j241dund721uuzxi4].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.128gv9r0av0j241dund721uuzxi4].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.128gv9r0av0j241dund721uuzxi4].[Latitude (generated)]</column>
            <column>[federated.128gv9r0av0j241dund721uuzxi4].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.128gv9r0av0j241dund721uuzxi4].[Longitude (generated)]' field-type='quantitative' max='-10739918.509604806' min='-10804994.581685912' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.128gv9r0av0j241dund721uuzxi4].[Latitude (generated)]' field-type='quantitative' max='3897598.5765370415' min='3843465.0685051819' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.128gv9r0av0j241dund721uuzxi4].[none:zip_code:ok]' value='false' />
            <format attr='break-on-special' field='[federated.128gv9r0av0j241dund721uuzxi4].[none:zip_code:ok]' value='false' />
            <format attr='show-null-value-warning' field='[federated.128gv9r0av0j241dund721uuzxi4].[none:zip_code:ok]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.128gv9r0av0j241dund721uuzxi4].[usr:Calculation_1113796545718353921:ok]' />
              <size column='[federated.128gv9r0av0j241dund721uuzxi4].[sum:count_incidents:qk]' />
              <text column='[federated.128gv9r0av0j241dund721uuzxi4].[none:zip_code:ok]' />
              <text column='[federated.128gv9r0av0j241dund721uuzxi4].[sum:count_incidents:qk]' />
              <lod column='[federated.128gv9r0av0j241dund721uuzxi4].[none:zip_code:ok]' />
              <geometry column='[federated.128gv9r0av0j241dund721uuzxi4].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.128gv9r0av0j241dund721uuzxi4].[Latitude (generated)]</rows>
        <cols>[federated.128gv9r0av0j241dund721uuzxi4].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Incidents by beat per year'>
      <table>
        <view>
          <datasources>
            <datasource caption='beat_incidents_per_year' name='federated.1iqg4er0l5uh8b11pl8940nn8gfo' />
          </datasources>
          <datasource-dependencies datasource='federated.1iqg4er0l5uh8b11pl8940nn8gfo'>
            <column caption='Beat' datatype='integer' name='[beat]' role='measure' type='ordinal' />
            <column caption='Count Incidents' datatype='integer' name='[count_incidents]' role='measure' type='quantitative' />
            <column-instance column='[beat]' derivation='None' name='[none:beat:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[count_incidents]' derivation='Sum' name='[sum:count_incidents:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline0' value='false' />
            <format attr='fill-color' id='refline0' value='#fefaf1' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='solid' />
            <format attr='stroke-color' id='refline0' value='#e15759' />
            <format attr='palette' id='refline0' value='tint88' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1iqg4er0l5uh8b11pl8940nn8gfo].[none:year:ok]' />
              <size column='[federated.1iqg4er0l5uh8b11pl8940nn8gfo].[sum:count_incidents:qk]' />
              <text column='[federated.1iqg4er0l5uh8b11pl8940nn8gfo].[none:beat:ok]' />
            </encodings>
            <reference-line axis-column='[federated.1iqg4er0l5uh8b11pl8940nn8gfo].[sum:count_incidents:qk]' enable-instant-analytics='true' fill-above='true' fill-below='true' formula='percentile' id='refline0' label-type='automatic' scope='per-pane' symmetric='false' value-column='[federated.1iqg4er0l5uh8b11pl8940nn8gfo].[sum:count_incidents:qk]' z-order='1'>
              <reference-line-value percentile='95' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='14.547999382019043' />
                <format attr='shape' value=':filled/times' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1iqg4er0l5uh8b11pl8940nn8gfo].[sum:count_incidents:qk]</rows>
        <cols>([federated.1iqg4er0l5uh8b11pl8940nn8gfo].[none:year:ok] / [federated.1iqg4er0l5uh8b11pl8940nn8gfo].[none:beat:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Incidents by divison per year'>
      <table>
        <view>
          <datasources>
            <datasource caption='div_incidents_per_year' name='federated.06m2zkj05xmyy71a69rr01jzw25c' />
          </datasources>
          <datasource-dependencies datasource='federated.06m2zkj05xmyy71a69rr01jzw25c'>
            <column caption='Count Incidents' datatype='integer' name='[count_incidents]' role='measure' type='quantitative' />
            <column caption='Division' datatype='string' name='[division]' role='dimension' type='nominal' />
            <column-instance column='[division]' derivation='None' name='[none:division:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[count_incidents]' derivation='Sum' name='[sum:count_incidents:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.06m2zkj05xmyy71a69rr01jzw25c].[none:division:nk]' />
              <shape column='[federated.06m2zkj05xmyy71a69rr01jzw25c].[none:division:nk]' />
              <size column='[federated.06m2zkj05xmyy71a69rr01jzw25c].[sum:count_incidents:qk]' />
              <text column='[federated.06m2zkj05xmyy71a69rr01jzw25c].[none:division:nk]' />
              <text column='[federated.06m2zkj05xmyy71a69rr01jzw25c].[sum:count_incidents:qk]' />
              <lod column='[federated.06m2zkj05xmyy71a69rr01jzw25c].[none:division:nk]' />
            </encodings>
            <reference-line axis-column='[federated.06m2zkj05xmyy71a69rr01jzw25c].[sum:count_incidents:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.06m2zkj05xmyy71a69rr01jzw25c].[sum:count_incidents:qk]' z-order='1' />
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/times' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06m2zkj05xmyy71a69rr01jzw25c].[sum:count_incidents:qk]</rows>
        <cols>[federated.06m2zkj05xmyy71a69rr01jzw25c].[none:year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Incidents per year'>
      <table>
        <view>
          <datasources>
            <datasource caption='incidents_per_year (incidents_per_year)' name='federated.05y7qjt1llubn710p6kir1oi12pn' />
            <datasource caption='div_incidents_per_year' name='federated.06m2zkj05xmyy71a69rr01jzw25c' />
          </datasources>
          <datasource-dependencies datasource='federated.05y7qjt1llubn710p6kir1oi12pn'>
            <column caption='Count Incidents' datatype='integer' name='[count_incidents]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[count_incidents]' derivation='Sum' name='[sum:count_incidents:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.06m2zkj05xmyy71a69rr01jzw25c'>
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05y7qjt1llubn710p6kir1oi12pn].[none:year:ok]' />
              <text column='[federated.05y7qjt1llubn710p6kir1oi12pn].[sum:count_incidents:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05y7qjt1llubn710p6kir1oi12pn].[sum:count_incidents:qk]</rows>
        <cols>[federated.05y7qjt1llubn710p6kir1oi12pn].[none:year:ok]</cols>
        <join-lod-exclude-overrides>
          <column>[federated.06m2zkj05xmyy71a69rr01jzw25c].[year]</column>
        </join-lod-exclude-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='race_genderF' name='federated.09t3jpm05n517e111y1l21az0uhz' />
          </datasources>
          <datasource-dependencies datasource='federated.09t3jpm05n517e111y1l21az0uhz'>
            <column caption='Complainant Gender' datatype='string' name='[complainant_gender]' role='dimension' type='nominal' />
            <column caption='Complainant Race' datatype='string' name='[complainant_race]' role='dimension' type='nominal' />
            <column caption='Count Incidents' datatype='integer' name='[count_incidents]' role='measure' type='quantitative' />
            <column-instance column='[complainant_gender]' derivation='None' name='[none:complainant_gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[complainant_race]' derivation='None' name='[none:complainant_race:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[count_incidents]' derivation='Sum' name='[sum:count_incidents:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#fefaf1' />
            <format attr='fill-below' id='refline0' value='#f2f6f7' />
            <format attr='stroke-color' id='refline0' value='#e15759' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]' />
              <text column='[federated.09t3jpm05n517e111y1l21az0uhz].[sum:count_incidents:qk]' />
              <text column='[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]' />
            </encodings>
            <reference-line axis-column='[federated.09t3jpm05n517e111y1l21az0uhz].[sum:count_incidents:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.09t3jpm05n517e111y1l21az0uhz].[sum:count_incidents:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09t3jpm05n517e111y1l21az0uhz].[sum:count_incidents:qk]</rows>
        <cols>([federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_gender:nk] / ([federated.09t3jpm05n517e111y1l21az0uhz].[none:year:ok] / [federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='race_genderF' name='federated.09t3jpm05n517e111y1l21az0uhz' />
          </datasources>
          <datasource-dependencies datasource='federated.09t3jpm05n517e111y1l21az0uhz'>
            <column caption='Complainant Gender' datatype='string' name='[complainant_gender]' role='dimension' type='nominal' />
            <column caption='Complainant Race' datatype='string' name='[complainant_race]' role='dimension' type='nominal' />
            <column caption='Count Incidents' datatype='integer' name='[count_incidents]' role='measure' type='quantitative' />
            <column-instance column='[complainant_gender]' derivation='None' name='[none:complainant_gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[complainant_race]' derivation='None' name='[none:complainant_race:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[count_incidents]' derivation='Sum' name='[sum:count_incidents:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_gender:nk]'>
            <groupfilter function='level-members' level='[none:complainant_gender:nk]' />
          </filter>
          <filter class='categorical' column='[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_gender:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:complainant_gender:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:complainant_gender:nk]' member='&quot;N/A&quot;' />
                <groupfilter function='member' level='[none:complainant_gender:nk]' member='&quot;TEST&quot;' />
                <groupfilter function='member' level='[none:complainant_gender:nk]' member='&quot;U&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]'>
            <groupfilter function='level-members' level='[none:complainant_race:nk]' />
          </filter>
          <sort class='computed' column='[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]' direction='DESC' using='[federated.09t3jpm05n517e111y1l21az0uhz].[sum:count_incidents:qk]'>
            <groupfilter function='member' level='[none:year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <groupfilter function='member' level='[none:complainant_gender:nk]' member='&quot;M&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <slices>
            <column>[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]</column>
            <column>[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.09t3jpm05n517e111y1l21az0uhz].[none:year:ok]' value='36' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09t3jpm05n517e111y1l21az0uhz].[sum:count_incidents:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]</rows>
        <cols total='true'>([federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_gender:nk] / [federated.09t3jpm05n517e111y1l21az0uhz].[none:year:ok])</cols>
        <subtotals>
          <column>[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_gender:nk]</column>
        </subtotals>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='860' minwidth='650' preset-index='5' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='75385' x='0' y='0'>
              <zone h='100000' id='1' name='Incidents by divison per year' w='75385' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='24615' x='75385' y='0'>
              <zone h='23488' id='6' name='Incidents by divison per year' pane-specification-id='0' param='[federated.06m2zkj05xmyy71a69rr01jzw25c].[none:division:nk]' type='color' w='24615' x='75385' y='0' />
              <zone h='23023' id='7' name='Incidents by divison per year' pane-specification-id='0' param='[federated.06m2zkj05xmyy71a69rr01jzw25c].[none:division:nk]' type='shape' w='24615' x='75385' y='23488' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='156'>
    <window class='worksheet' name='Incidents per year'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.05y7qjt1llubn710p6kir1oi12pn].[none:year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05y7qjt1llubn710p6kir1oi12pn].[none:year:ok]</field>
            <field>[federated.05y7qjt1llubn710p6kir1oi12pn].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Incidents by divison per year'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='235'>
            <card pane-specification-id='0' param='[federated.06m2zkj05xmyy71a69rr01jzw25c].[none:division:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.06m2zkj05xmyy71a69rr01jzw25c].[none:division:nk]' type='shape' />
            <card pane-specification-id='0' param='[federated.06m2zkj05xmyy71a69rr01jzw25c].[sum:count_incidents:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06m2zkj05xmyy71a69rr01jzw25c].[none:division:nk]</field>
            <field>[federated.06m2zkj05xmyy71a69rr01jzw25c].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Incidents by beat per year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1iqg4er0l5uh8b11pl8940nn8gfo].[none:year:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.1iqg4er0l5uh8b11pl8940nn8gfo].[sum:count_incidents:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1iqg4er0l5uh8b11pl8940nn8gfo].[none:beat:ok]</field>
            <field>[federated.1iqg4er0l5uh8b11pl8940nn8gfo].[none:year:ok]</field>
            <field>[federated.1iqg4er0l5uh8b11pl8940nn8gfo].[none:year:qk]</field>
            <field>[federated.1iqg4er0l5uh8b11pl8940nn8gfo].[sum:beat:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Incidents by Zipcode'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.128gv9r0av0j241dund721uuzxi4].[usr:Calculation_1113796545718353921:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.128gv9r0av0j241dund721uuzxi4].[sum:count_incidents:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.128gv9r0av0j241dund721uuzxi4].[none:year:ok]</field>
            <field>[federated.128gv9r0av0j241dund721uuzxi4].[none:zip_code:ok]</field>
            <field>[federated.128gv9r0av0j241dund721uuzxi4].[sum:Calculation_1113796545718353921:ok]</field>
            <field>[federated.128gv9r0av0j241dund721uuzxi4].[usr:Calculation_1113796545718353921:ok]</field>
            <field>[federated.128gv9r0av0j241dund721uuzxi4].[usr:Calculation_1113796545718353921:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Incidents by UCR offense description'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.0w4zkjd0gnc24h15ueur70e97nwc].[sum:count_incidents:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w4zkjd0gnc24h15ueur70e97nwc].[none:Count Incidents (bin):qk]</field>
            <field>[federated.0w4zkjd0gnc24h15ueur70e97nwc].[none:ucr_offense_description:nk]</field>
            <field>[federated.0w4zkjd0gnc24h15ueur70e97nwc].[none:year:ok]</field>
            <field>[federated.0w4zkjd0gnc24h15ueur70e97nwc].[none:year:qk]</field>
            <field>[federated.0w4zkjd0gnc24h15ueur70e97nwc].[sum:count_incidents:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Incidents by Race For Female Complainant'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_gender:nk]</field>
            <field>[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]</field>
            <field>[federated.09t3jpm05n517e111y1l21az0uhz].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Incidents by Race For male Complainant'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]</field>
            <field>[federated.09t3jpm05n517e111y1l21az0uhz].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_gender:nk]' type='filter' />
            <card param='[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_gender:nk]</field>
            <field>[federated.09t3jpm05n517e111y1l21az0uhz].[none:complainant_race:nk]</field>
            <field>[federated.09t3jpm05n517e111y1l21az0uhz].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Incidents by divison per year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29d3RcV37n+XmvckYVUMiJyCDABOZMSaQkilRL3ZLldrfdY8/pmd0Z73GP
      w449a+96xr32GR/3eDx2e91Ou7bH7qyWWqKyKJIiCeYAggCInEMVUChUju+9/QNsMEJiQCTe
      5xycg/eq3nu/qrrfG373d39XUBRFQUVlBSIIgiAuthEqKouJKgCVFY0qAJUVjSoAlccmEAjw
      9ttv09jYSCAQ4Pr16zOvXbt2jUgkMnN85syZxTBxVgR1EKzyuIyMjNDe3o5er8dut+P3+zGZ
      TMiyjKIo5Obm0tLSwrp16+jq6sJqteL1eqmpqaG1tRWNRsPBgwcX3O57BsGTPh8PooZx7xgp
      SZ45TidCtLb3zolRQU8vfZ7QQ11z7do1QGZ0dIz7ydkzOoo0J9apfBY6nY5EIkEgEGBwcJDB
      wUECgQDpdJpEIkEkEmFkZITOzk42b97MqVOnsFgs+P3+RbP5DgF89MEHD1RQ/L4J0tKtkpZO
      hmhr73ugB37w9k8IJ2d/Pejpo9/7cAKYbnIVxscn7vu6z+tFvu8rKnOB0WjE5/MRDoeprq4m
      Ly+P0tJSSktLycnJQavVkpGRQTKZpLCwkKqqKi5cuMCuXbvIysqisLBw0WzX3u/kyfePINud
      pEJT5FVtorbQztGPP0FvMlNSvY6Af4JcGWKjvZxr6sSgTZCUrcipGMeOnQBBILesnlUOiSOf
      XiXPnUEgJvP01nqut7QiWN1UVFYTHevAG5bQGaxs37oR7U05tjdfQvG2oMvIpz5fT9OwxJ5N
      NTSfPYGrZisFGUakZJSjHx/DZHPgnYoAGiYmvMSDo5xr9bJv+zq6ms6iyatjwuejErjceIxA
      SsRgcbJ9Yz2Xz3xKMAWKaGLvzi2ceP9tdA4X8YCfkrU7qCrMBODIT36AIzufwFSQHfv2Y5JD
      nDx7GWSJmoYd6PydDMTNXPzkOF/53/4tTi28feRDDr/4AlJ4jBNNHtavsnOppRtJSrNt99PI
      gWGutfeTjEdYvXkv4kQLo0kHZ08c56tf/9c4TfoFKgKPj8vl4tVXX5053rRp0z3vKS0tXUCL
      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
    </thumbnail>
    <thumbnail height='192' name='Incidents by Race For Female Complainant' width='192'>
      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
      GLlbJAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Incidents by Race For male Complainant' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Incidents by UCR offense description' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Incidents by Zipcode' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Incidents by beat per year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Incidents by divison per year' width='192'>
      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
      PwYOmN5MP43IAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Incidents per year' width='192'>
      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
      cj9HST/TAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      h4b4O5o1CIRE8voxAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
